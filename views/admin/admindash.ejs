<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="/css/admin/adminDash.css">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@4.0.0/dist/css/bootstrap.min.css"
        integrity="sha384-Gn5384xqQ1aoWXA+058RXPxPg6fy4IWvTNh0E263XmFcJlSAwiGgFAW/dAiS6JXm" crossorigin="anonymous">
    <title>Admin Dashboard</title>
</head>
<style>
    .header {
        background-color: #ffffff !important;

    }
    

    #cardcontainer {
        display: flex;
        flex-direction: row;
        justify-content: space-around;
    }

    .graphsdiv {
        display: flex;
        justify-content: center;
    }

    @media (max-width:850px) {
        #cardcontainer {
            flex-direction: column;

        }

    }
    .recentOrders {
       margin-top: 20px;
    }
   
@media only screen and (max-width: 579px), (min-width: 770px) {
    .recentOrders {
        width: 100%!important;
    }
}


    .header {
        background-color: #000000;
        color: #fff;
        padding: 20px;
        text-align: center;
        min-height: 80px;
    }

    .container {
        display: flex;
        flex-wrap: wrap;
        justify-content: space-between;
        padding: 20px;
    }

    .card {
        background-color: #fff;
        padding: 20px;
        border-radius: 13px!important;
        box-shadow: rgba(0, 0, 0, 0) 0px 0px 28px 5px, rgba(0, 0, 0, 0.05) 0px 4px 6px -2px!important;
        margin-bottom: 20px;
        border: none!important;
        flex: 1;
    }

    .graph {
        margin-right: 0;
    }

    .table-responsive {
        overflow-x: auto;
    }
</style>

<body>
    <%-include("./partials/side-bar.ejs")%>
       


        <h1 style="text-align: center; margin-top: 20px;font-weight: 700;">Admin Dashboard</h1>


        <div class="details" style="    display: flex;justify-content: center;">
            <div class="recentOrders" >
                <div class="container mt-4" style=" width: 100%;">
                    <div class="row" style="width: 100%;">
                        <div class="col-lg-12">
                            <div class="card mb-4 shadow" style="background-color: #fff;">
                                <h2 class="card-header">Sales Analysis</h2>

                                <div class="card-body">
                                    <div class="row">
                                        <div class="dropdown">
                                            <button class="btn btn-secondary dropdown-toggle" type="button"
                                                id="timeIntervalDropdown" data-bs-toggle="dropdown"
                                                aria-expanded="false">
                                                By Day
                                            </button>
                                            <ul class="dropdown-menu" aria-labelledby="timeIntervalDropdown">
                                                <li><a class="dropdown-item" id="byDayOption">By Day</a></li>
                                                <li><a class="dropdown-item" id="byMonthOption">By Month</a></li>
                                                <li><a class="dropdown-item" id="byYearOption">By Year</a></li>
                                            </ul>
                                        </div>
                                        <div id="cardcontainer">
                                            <div class="col-lg-6 graphsdiv">
                                                <canvas id="salesGraphAmount"></canvas>
                                            </div>
                                            <div class="col-lg-6 graphsdiv">
                                                <canvas id="salesGraphCount"></canvas>

                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>


                        <div class="col-lg-12">
                            <div class="card mb-4 shadow" style="background-color: #fff;">
                                <h2 class="card-header">Latest Orders</h2>
                                <div class="card-body ">
                                    <div class="table-responsive">
                                        <table class="table table-borderless">
                                            <thead>
                                                <tr>
                                                    <th>Order ID</th>
                                                    <th>Date</th>
                                                    <th>Total</th>
                                                    <th>Payment</th>
                                                    <th>Status</th>
                                                </tr>
                                            </thead>
                                            <tbody id="latestOrdersTable">
                                            </tbody>
                                        </table>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class="col-lg-12">
                            <div class="card shadow" style="background-color: #fff;">
                                <h2 class="card-header">Best Sellers</h2>
                                <div class="card-body">
                                    <div class="table-responsive">
                                        <table class="table table-borderless">
                                            <thead>
                                                <tr>
                                                    <th>Product Image</th>
                                                    <th>Product Name</th>
                                                    <th>Price</th>
                                                    <th>Status</th>
                                                    <th>Sold</th>
                                                </tr>
                                            </thead>
                                            <tbody id="bestSellersTable">
                                            </tbody>
                                        </table>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

            </div>

        </div>
        </div>
        </div>
</body>

<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

<script>

    updateSalesGraph("day");
    document.getElementById("byDayOption").addEventListener("click", function () {
        document.getElementById("timeIntervalDropdown").textContent = "By Day";
        updateSalesGraph("day");
    });



    document.getElementById("byMonthOption").addEventListener("click", function () {
        document.getElementById("timeIntervalDropdown").textContent = "By Month";
        updateSalesGraph("month");
    });

    document.getElementById("byYearOption").addEventListener("click", function () {
        document.getElementById("timeIntervalDropdown").textContent = "By Year";
        updateSalesGraph("year");
    });


    async function fetchSalesData(timeInterval) {

        try {
            let response;
            if (timeInterval === "day") {
                response = await fetch('/admin/count-orders-by-day');
            } else if (timeInterval === "month") {

                response = await fetch(`/admin/count-orders-by-${timeInterval}`);
            } else if (timeInterval === "year") {

                response = await fetch(`/admin/count-orders-by-${timeInterval}`);
            } else {
                return false;
            }

            if (!response.ok) {
                throw new Error('Network response was not ok');
            }

            const data = await response.json();
            return data;
        } catch (error) {
            console.error("Error fetching data:", error);
        }
    }



    async function fetchOrdersAndSales() {
        try {

            const response = await fetch("/admin/latestOrders");
            if (!response.ok) {
                throw new Error("Network response was not ok");
            }
            const data = await response.json();

            return data;
        } catch (error) {
            console.log("Error fetching data", error);
        }
    }




    async function updateSalesGraph(timeInterval) {
        const salesData = await fetchSalesData(timeInterval);
        const Amount = document.getElementById("salesGraphAmount").getContext("2d");
        const Count = document.getElementById("salesGraphCount").getContext("2d");

        if (window.myChart1) {
            window.myChart1.destroy();
        }
        if (window.myChart2) {
            window.myChart2.destroy();
        }

        window.myChart1 = new Chart(Amount, {
    type: "line", 
    data: {
        labels: salesData.labelsByCount,
        datasets: [{
            label: "Sales by orders",
            data: salesData.dataByCount,
            borderColor: "#4461F2",
            borderWidth: 2,
            fill: false 
        }]
    },
    options: {
        legend: {
            position: 'right',
        }
    }
});



        const barColors = ["#68AAFF", "#4461F2"];
        window.myChart2 = new Chart(Count, {
            type: "bar",
            data: {
                labels: salesData.labelsByAmount,
                datasets: [
                    {
                        label: "Sales by Amount",
                        data: salesData.dataByAmount,
                        backgroundColor: barColors,
                        borderColor: "white",
                        borderWidth: 3,
                    },
                ],
            },
            options: {
                scales: {
                    x: [{
                        type: 'category',
                        position: 'bottom',
                        gridLines: {
                            display: false
                        }
                    }],
                    y: [{
                        type: 'linear',
                        position: 'left',
                        ticks: {
                            beginAtZero: true,
                            maxTicksLimit: 5,
                        },
                        gridLines: {
                            display: true
                        }
                    }]
                }
            }



        });

    }



    async function updateLatestOrdersAndBestSellers() {
        const data = await fetchOrdersAndSales();
        const latestOrdersTable = document.getElementById("latestOrdersTable");
        const bestSellersTable = document.getElementById("bestSellersTable");
        const ordersData = data.latestOrders;
        const bestSellersData = data.bestSeller;

        ordersData.forEach((order) => {

            const row = latestOrdersTable.insertRow();
            const orderIdCell = row.insertCell(0);
            const dateCell = row.insertCell(1);
            const totalCell = row.insertCell(2);
            const paymentCell = row.insertCell(3);
            const statusCell = row.insertCell(4);


            orderIdCell.textContent = order.orderNumber;
            dateCell.textContent = order.OrderDate;
            totalCell.textContent = order.TotalPrice;
            paymentCell.textContent = order.paymentMethod;
            statusCell.textContent = order.paymentStatus;
        });

        bestSellersData.forEach((seller) => {
            const row = bestSellersTable.insertRow();
            const productImageCell = row.insertCell(0);
            const productNameCell = row.insertCell(1);
            const priceCell = row.insertCell(2);
            const statusCell = row.insertCell(3);
            const salesCell = row.insertCell(4);

            const imgElement = document.createElement("img");
            const imageUrl = seller.productDetails?.Image[0];
            imgElement.src = imageUrl;
            imgElement.style.maxWidth = "50px";
            productImageCell.appendChild(imgElement);

            productNameCell.textContent = seller.productDetails.Name;
            priceCell.textContent = seller.productDetails.Price;
            statusCell.textContent = seller.productDetails.variant.quantity === 0 ? "Out of Stock" : "In Stock";
            salesCell.textContent = seller.totalCount;
        });
    }



    updateSalesGraph();
    updateLatestOrdersAndBestSellers();



</script>